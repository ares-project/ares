language: go
go_import_path: github.com/ares-project/ares
sudo: false
matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      go: 1.7.x
      script:
        - sudo modprobe fuse
        - sudo chmod 666 /dev/fuse
        - sudo chown root:$USER /etc/fuse.conf
        - go run build/ci.go install
        - go run build/ci.go test -coverage

    - os: linux
      dist: trusty
      sudo: required
      go: 1.8.x
      script:
        - sudo modprobe fuse
        - sudo chmod 666 /dev/fuse
        - sudo chown root:$USER /etc/fuse.conf
        - go run build/ci.go install
        - go run build/ci.go test -coverage

    # These are the latest Go versions.
    - os: linux
      dist: trusty
      sudo: required
      go: 1.9.x
      script:
        - sudo modprobe fuse
        - sudo chmod 666 /dev/fuse
        - sudo chown root:$USER /etc/fuse.conf
        - go run build/ci.go install
        - go run build/ci.go test -coverage

    - os: osx
      go: 1.9.x
      script:
        - brew update
        - brew install caskroom/cask/brew-cask
        - brew cask install osxfuse
        - go run build/ci.go install
        - go run build/ci.go test -coverage

    # This builder only tests code linters on latest version of Go
    - os: linux
      dist: trusty
      go: 1.9.x
      env:
        - lint
      git:
        submodules: false # avoid cloning ethereum/tests
      script:
        - go run build/ci.go lint

    # This builder does the Ubuntu PPA and Linux Azure uploads
    - os: linux
      dist: trusty
      sudo: required
      go: 1.9.x
      env:
        - ubuntu-ppa
        - azure-linux
      git:
        submodules: false # avoid cloning ethereum/tests
      addons:
        apt:
          packages:
            - devscripts
            - debhelper
            - dput
            - gcc-multilib
            - fakeroot
      script:
        # Build for the primary platforms that Trusty can manage
        # - go run build/ci.go debsrc -signer "Go Ethereum Linux Builder <geth-ci@ethereum.org>" -upload ppa:ethereum/ethereum
        - go run build/ci.go install
        - go run build/ci.go archive -type tar  -upload aresblob/builds
        - go run build/ci.go install -arch 386
        - go run build/ci.go archive -arch 386 -type tar  -upload aresblob/builds

        # Switch over GCC to cross compilation (breaks 386, hence why do it here only)
        - sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install gcc-arm-linux-gnueabi libc6-dev-armel-cross gcc-arm-linux-gnueabihf libc6-dev-armhf-cross gcc-aarch64-linux-gnu libc6-dev-arm64-cross
        - sudo ln -s /usr/include/asm-generic /usr/include/asm

        - GOARM=5 CC=arm-linux-gnueabi-gcc go run build/ci.go install -arch arm
        - GOARM=5 go run build/ci.go archive -arch arm -type tar  -upload aresblob/builds
        - GOARM=6 CC=arm-linux-gnueabi-gcc go run build/ci.go install -arch arm
        - GOARM=6 go run build/ci.go archive -arch arm -type tar  -upload aresblob/builds
        - GOARM=7 CC=arm-linux-gnueabihf-gcc go run build/ci.go install -arch arm
        - GOARM=7 go run build/ci.go archive -arch arm -type tar  -upload aresblob/builds
        - CC=aarch64-linux-gnu-gcc go run build/ci.go install -arch arm64
        - go run build/ci.go archive -arch arm64 -type tar  -upload aresblob/builds

    # This builder does the Linux Azure MIPS xgo uploads
    - os: linux
      dist: trusty
      services:
        - docker
      go: 1.9.x
      env:
        - azure-linux-mips
      git:
        submodules: false # avoid cloning ethereum/tests
      script:
        - go run build/ci.go xgo --alltools -- --targets=linux/mips --ldflags '-extldflags "-static"' -v
        - for bin in build/bin/*-linux-mips; do mv -f "${bin}" "${bin/-linux-mips/}"; done
        - go run build/ci.go archive -arch mips -type tar  -upload aresblob/builds

        - go run build/ci.go xgo --alltools -- --targets=linux/mipsle --ldflags '-extldflags "-static"' -v
        - for bin in build/bin/*-linux-mipsle; do mv -f "${bin}" "${bin/-linux-mipsle/}"; done
        - go run build/ci.go archive -arch mipsle -type tar  -upload aresblob/builds

        - go run build/ci.go xgo --alltools -- --targets=linux/mips64 --ldflags '-extldflags "-static"' -v
        - for bin in build/bin/*-linux-mips64; do mv -f "${bin}" "${bin/-linux-mips64/}"; done
        - go run build/ci.go archive -arch mips64 -type tar  -upload aresblob/builds

        - go run build/ci.go xgo --alltools -- --targets=linux/mips64le --ldflags '-extldflags "-static"' -v
        - for bin in build/bin/*-linux-mips64le; do mv -f "${bin}" "${bin/-linux-mips64le/}"; done
        - go run build/ci.go archive -arch mips64le -type tar  -upload aresblob/builds

    # This builder does the OSX Azure, iOS CocoaPods and iOS Azure uploads
    - os: osx
      go: 1.9.x
      env:
        - azure-osx
        - azure-ios
        - cocoapods-ios
      git:
        submodules: false # avoid cloning ethereum/tests
      script:
        - go run build/ci.go install
        - go run build/ci.go archive -type tar  -upload aresblob/builds

        # Build the iOS framework and upload it to CocoaPods and Azure
        # - gem uninstall cocoapods -a -x
        # - gem install cocoapods

        # - mv ~/.cocoapods/repos/master ~/.cocoapods/repos/master.bak
        # - sed -i '.bak' 's/repo.join/!repo.join/g' $(dirname `gem which cocoapods`)/cocoapods/sources_manager.rb
        # - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then git clone --depth=1 https://github.com/CocoaPods/Specs.git ~/.cocoapods/repos/master && pod setup --verbose; fi

        # - xctool -version
        # - xcrun simctl list

        # - go run build/ci.go xcode  -deploy trunk -upload aresblob/builds

    # This builder does the Azure archive purges to avoid accumulating junk
    - os: linux
      dist: trusty
      sudo: required
      go: 1.9.x
      env:
        - azure-purge
      git:
        submodules: false # avoid cloning ethereum/tests
      script:
        - go run build/ci.go purge -store aresblob/builds -days 14